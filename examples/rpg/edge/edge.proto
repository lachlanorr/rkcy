// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

syntax = "proto3";

package rocketcycle.examples.rpg.edge;
option go_package = "github.com/lachlanorr/rocketcycle/examples/rpg/edge";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "examples/rpg/storage/storage.proto";

message MmoRequest {
    string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", min_length: 1}];
}

message MmoResponse {
    string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}", min_length: 1}];
}

service MmoService {
    rpc GetPlayer(MmoRequest) returns (rocketcycle.examples.rpg.storage.Player) {
        option (google.api.http) = {
            get: "/v1/player/get/{id}"
        };
    }
    rpc CreatePlayer(rocketcycle.examples.rpg.storage.Player) returns (rocketcycle.examples.rpg.storage.Player) {
        option (google.api.http) = {
            post: "/v1/player/create"
            body: "*"
        };
    }
    rpc UpdatePlayer(rocketcycle.examples.rpg.storage.Player) returns (rocketcycle.examples.rpg.storage.Player) {
        option (google.api.http) = {
            post: "/v1/player/update"
            body: "*"
        };
    }
    rpc DeletePlayer(MmoRequest) returns (MmoResponse) {
        option (google.api.http) = {
            post: "/v1/player/delete/{id}"
        };
    }
}

