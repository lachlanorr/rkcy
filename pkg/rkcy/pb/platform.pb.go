// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: platform.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Different types of partitioning mechanisms
type Platform_PartitionStrategy int32

const (
	// FNV-1 64 bit has followed by modulus of partition count
	Platform_FNV64_MOD Platform_PartitionStrategy = 0
)

// Enum value maps for Platform_PartitionStrategy.
var (
	Platform_PartitionStrategy_name = map[int32]string{
		0: "FNV64_MOD",
	}
	Platform_PartitionStrategy_value = map[string]int32{
		"FNV64_MOD": 0,
	}
)

func (x Platform_PartitionStrategy) Enum() *Platform_PartitionStrategy {
	p := new(Platform_PartitionStrategy)
	*p = x
	return p
}

func (x Platform_PartitionStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Platform_PartitionStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_proto_enumTypes[0].Descriptor()
}

func (Platform_PartitionStrategy) Type() protoreflect.EnumType {
	return &file_platform_proto_enumTypes[0]
}

func (x Platform_PartitionStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Platform_PartitionStrategy.Descriptor instead.
func (Platform_PartitionStrategy) EnumDescriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{0, 0}
}

// Type implies what topics will be present
type Platform_App_Type int32

const (
	// Required topics:
	//     * admin - handles control messages to coordinate distributed tasks
	//     * error - errors encountered during processing written here
	//     * ... - additional application specific topics
	Platform_App_GENERAL Platform_App_Type = 0
	// Required topics:
	//     * admin - handles control messages to coordinate distributed tasks
	//     * error - errors encountered during processing written here
	//     * ... - additional application specific topics for stages of batch processing
	// For telemetry purposes, stage topics are assumed to be in alphabetical order.
	// Batch jobs topics aren't created by default, but on demand with the timestamp
	// included in the names.
	Platform_App_BATCH Platform_App_Type = 1
	// Required topics:
	//     * admin - handles control messages to coordinate distributed tasks
	//     * process - handles messages that affect internal state of models
	//     * error - errors encountered during processing written here
	//     * complete - completed transactions written here for post processing
	//     * storage - handles messages sent to the persistence layer
	Platform_App_APECS Platform_App_Type = 2
)

// Enum value maps for Platform_App_Type.
var (
	Platform_App_Type_name = map[int32]string{
		0: "GENERAL",
		1: "BATCH",
		2: "APECS",
	}
	Platform_App_Type_value = map[string]int32{
		"GENERAL": 0,
		"BATCH":   1,
		"APECS":   2,
	}
)

func (x Platform_App_Type) Enum() *Platform_App_Type {
	p := new(Platform_App_Type)
	*p = x
	return p
}

func (x Platform_App_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Platform_App_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_proto_enumTypes[1].Descriptor()
}

func (Platform_App_Type) Type() protoreflect.EnumType {
	return &file_platform_proto_enumTypes[1]
}

func (x Platform_App_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Platform_App_Type.Descriptor instead.
func (Platform_App_Type) EnumDescriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{0, 1, 0}
}

// States surrounding current vs future topics and current to future transition
type Platform_App_Topics_State int32

const (
	// no future topic exists, everyting using current
	Platform_App_Topics_CURRENT Platform_App_Topics_State = 0
	// future topic added to app and gets created
	Platform_App_Topics_FUTURE_INIT Platform_App_Topics_State = 1
	// current to future mirroring starts and gets as caught up as possible
	Platform_App_Topics_FUTURE_MIRROR Platform_App_Topics_State = 2
	// producers all pause
	Platform_App_Topics_PRODUCER_PAUSE Platform_App_Topics_State = 3
	// wait until mirror is confirmed on all partitions
	Platform_App_Topics_FUTURE_MIRROR_VALIDATE Platform_App_Topics_State = 4
	// consumers read until end and shutdown
	Platform_App_Topics_CONSUMER_SHUTDOWN Platform_App_Topics_State = 5
	// new consumers start on future, advanced passed newest
	Platform_App_Topics_CONSUMER_FUTURE_START Platform_App_Topics_State = 6
	// producers unpause and produce to future
	Platform_App_Topics_PRODUCER_FUTURE_START Platform_App_Topics_State = 7
	// future becomes current, future is nulled, state set to CURRENT
	Platform_App_Topics_FUTURE_TO_CURRENT Platform_App_Topics_State = 8
)

// Enum value maps for Platform_App_Topics_State.
var (
	Platform_App_Topics_State_name = map[int32]string{
		0: "CURRENT",
		1: "FUTURE_INIT",
		2: "FUTURE_MIRROR",
		3: "PRODUCER_PAUSE",
		4: "FUTURE_MIRROR_VALIDATE",
		5: "CONSUMER_SHUTDOWN",
		6: "CONSUMER_FUTURE_START",
		7: "PRODUCER_FUTURE_START",
		8: "FUTURE_TO_CURRENT",
	}
	Platform_App_Topics_State_value = map[string]int32{
		"CURRENT":                0,
		"FUTURE_INIT":            1,
		"FUTURE_MIRROR":          2,
		"PRODUCER_PAUSE":         3,
		"FUTURE_MIRROR_VALIDATE": 4,
		"CONSUMER_SHUTDOWN":      5,
		"CONSUMER_FUTURE_START":  6,
		"PRODUCER_FUTURE_START":  7,
		"FUTURE_TO_CURRENT":      8,
	}
)

func (x Platform_App_Topics_State) Enum() *Platform_App_Topics_State {
	p := new(Platform_App_Topics_State)
	*p = x
	return p
}

func (x Platform_App_Topics_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Platform_App_Topics_State) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_proto_enumTypes[2].Descriptor()
}

func (Platform_App_Topics_State) Type() protoreflect.EnumType {
	return &file_platform_proto_enumTypes[2]
}

func (x Platform_App_Topics_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Platform_App_Topics_State.Descriptor instead.
func (Platform_App_Topics_State) EnumDescriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

type Platform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Apps          []*Platform_App     `protobuf:"bytes,2,rep,name=apps,proto3" json:"apps,omitempty"`
	Clusters      []*Platform_Cluster `protobuf:"bytes,3,rep,name=clusters,proto3" json:"clusters,omitempty"`
	HeaderAliases map[string]string   `protobuf:"bytes,4,rep,name=header_aliases,json=headerAliases,proto3" json:"header_aliases,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Platform) Reset() {
	*x = Platform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Platform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform) ProtoMessage() {}

func (x *Platform) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform.ProtoReflect.Descriptor instead.
func (*Platform) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{0}
}

func (x *Platform) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Platform) GetApps() []*Platform_App {
	if x != nil {
		return x.Apps
	}
	return nil
}

func (x *Platform) GetClusters() []*Platform_Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *Platform) GetHeaderAliases() map[string]string {
	if x != nil {
		return x.HeaderAliases
	}
	return nil
}

type Platform_App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   Platform_App_Type      `protobuf:"varint,1,opt,name=type,proto3,enum=rkcy.pb.Platform_App_Type" json:"type,omitempty"`
	Name   string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Topics []*Platform_App_Topics `protobuf:"bytes,3,rep,name=topics,proto3" json:"topics,omitempty"`
}

func (x *Platform_App) Reset() {
	*x = Platform_App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Platform_App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform_App) ProtoMessage() {}

func (x *Platform_App) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform_App.ProtoReflect.Descriptor instead.
func (*Platform_App) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Platform_App) GetType() Platform_App_Type {
	if x != nil {
		return x.Type
	}
	return Platform_App_GENERAL
}

func (x *Platform_App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Platform_App) GetTopics() []*Platform_App_Topics {
	if x != nil {
		return x.Topics
	}
	return nil
}

type Platform_Cluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique name of cluster
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// kafka bootstrap servers for the cluster
	BootstrapServers string `protobuf:"bytes,2,opt,name=bootstrap_servers,json=bootstrapServers,proto3" json:"bootstrap_servers,omitempty"`
}

func (x *Platform_Cluster) Reset() {
	*x = Platform_Cluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Platform_Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform_Cluster) ProtoMessage() {}

func (x *Platform_Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform_Cluster.ProtoReflect.Descriptor instead.
func (*Platform_Cluster) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Platform_Cluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Platform_Cluster) GetBootstrapServers() string {
	if x != nil {
		return x.BootstrapServers
	}
	return ""
}

type Platform_App_Topics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// base name, it will get decorated with additional dot notated pieces
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// current vs future transition state
	State Platform_App_Topics_State `protobuf:"varint,2,opt,name=state,proto3,enum=rkcy.pb.Platform_App_Topics_State" json:"state,omitempty"`
	// current physical topic
	Current *Platform_App_Topic `protobuf:"bytes,3,opt,name=current,proto3" json:"current,omitempty"`
	// topic we're in the process of migrating to, will be
	// null unless an active migration is taking place
	Future *Platform_App_Topic `protobuf:"bytes,4,opt,name=future,proto3" json:"future,omitempty"`
}

func (x *Platform_App_Topics) Reset() {
	*x = Platform_App_Topics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Platform_App_Topics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform_App_Topics) ProtoMessage() {}

func (x *Platform_App_Topics) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform_App_Topics.ProtoReflect.Descriptor instead.
func (*Platform_App_Topics) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Platform_App_Topics) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Platform_App_Topics) GetState() Platform_App_Topics_State {
	if x != nil {
		return x.State
	}
	return Platform_App_Topics_CURRENT
}

func (x *Platform_App_Topics) GetCurrent() *Platform_App_Topic {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *Platform_App_Topics) GetFuture() *Platform_App_Topic {
	if x != nil {
		return x.Future
	}
	return nil
}

type Platform_App_Topic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// incrementing generation id, +1 every time we migrate a logical topic
	Generation int32 `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	// kafka cluster topic exists within
	ClusterName    string `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	PartitionCount int32  `protobuf:"varint,3,opt,name=partition_count,json=partitionCount,proto3" json:"partition_count,omitempty"`
	// How to determine which partiton messages are produced to
	PartitionStrat Platform_PartitionStrategy `protobuf:"varint,4,opt,name=partition_strat,json=partitionStrat,proto3,enum=rkcy.pb.Platform_PartitionStrategy" json:"partition_strat,omitempty"`
}

func (x *Platform_App_Topic) Reset() {
	*x = Platform_App_Topic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Platform_App_Topic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform_App_Topic) ProtoMessage() {}

func (x *Platform_App_Topic) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform_App_Topic.ProtoReflect.Descriptor instead.
func (*Platform_App_Topic) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *Platform_App_Topic) GetGeneration() int32 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *Platform_App_Topic) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *Platform_App_Topic) GetPartitionCount() int32 {
	if x != nil {
		return x.PartitionCount
	}
	return 0
}

func (x *Platform_App_Topic) GetPartitionStrat() Platform_PartitionStrategy {
	if x != nil {
		return x.PartitionStrat
	}
	return Platform_FNV64_MOD
}

var File_platform_proto protoreflect.FileDescriptor

var file_platform_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x70, 0x62, 0x22, 0x84, 0x09, 0x0a, 0x08, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x61, 0x70,
	0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x41, 0x70, 0x70, 0x52,
	0x04, 0x61, 0x70, 0x70, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x4b, 0x0a, 0x0e,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x1a, 0x40, 0x0a, 0x12, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x82, 0x06, 0x0a, 0x03,
	0x41, 0x70, 0x70, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x1a, 0x91, 0x03,
	0x0a, 0x06, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x72, 0x6b,
	0x63, 0x79, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x41,
	0x70, 0x70, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a,
	0x06, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x72, 0x6b, 0x63, 0x79, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x41, 0x70, 0x70, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x06, 0x66, 0x75, 0x74, 0x75,
	0x72, 0x65, 0x22, 0xcc, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x55, 0x54,
	0x55, 0x52, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x55,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x4d, 0x49, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x12, 0x0a,
	0x0e, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x45, 0x52, 0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x10,
	0x03, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x55, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x4d, 0x49, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x45, 0x10, 0x04, 0x12, 0x15, 0x0a,
	0x11, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x45, 0x52, 0x5f, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f,
	0x57, 0x4e, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x45, 0x52,
	0x5f, 0x46, 0x55, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x06, 0x12,
	0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x45, 0x52, 0x5f, 0x46, 0x55, 0x54, 0x55,
	0x52, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x55,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x10,
	0x08, 0x1a, 0xc1, 0x01, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x22, 0x29, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41,
	0x54, 0x43, 0x48, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x50, 0x45, 0x43, 0x53, 0x10, 0x02,
	0x1a, 0x4a, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x22, 0x0a, 0x11,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x4e, 0x56, 0x36, 0x34, 0x5f, 0x4d, 0x4f, 0x44, 0x10, 0x00,
	0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c,
	0x61, 0x63, 0x68, 0x6c, 0x61, 0x6e, 0x6f, 0x72, 0x72, 0x2f, 0x72, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x6b, 0x63, 0x79, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_platform_proto_rawDescOnce sync.Once
	file_platform_proto_rawDescData = file_platform_proto_rawDesc
)

func file_platform_proto_rawDescGZIP() []byte {
	file_platform_proto_rawDescOnce.Do(func() {
		file_platform_proto_rawDescData = protoimpl.X.CompressGZIP(file_platform_proto_rawDescData)
	})
	return file_platform_proto_rawDescData
}

var file_platform_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_platform_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_platform_proto_goTypes = []interface{}{
	(Platform_PartitionStrategy)(0), // 0: rkcy.pb.Platform.PartitionStrategy
	(Platform_App_Type)(0),          // 1: rkcy.pb.Platform.App.Type
	(Platform_App_Topics_State)(0),  // 2: rkcy.pb.Platform.App.Topics.State
	(*Platform)(nil),                // 3: rkcy.pb.Platform
	nil,                             // 4: rkcy.pb.Platform.HeaderAliasesEntry
	(*Platform_App)(nil),            // 5: rkcy.pb.Platform.App
	(*Platform_Cluster)(nil),        // 6: rkcy.pb.Platform.Cluster
	(*Platform_App_Topics)(nil),     // 7: rkcy.pb.Platform.App.Topics
	(*Platform_App_Topic)(nil),      // 8: rkcy.pb.Platform.App.Topic
}
var file_platform_proto_depIdxs = []int32{
	5, // 0: rkcy.pb.Platform.apps:type_name -> rkcy.pb.Platform.App
	6, // 1: rkcy.pb.Platform.clusters:type_name -> rkcy.pb.Platform.Cluster
	4, // 2: rkcy.pb.Platform.header_aliases:type_name -> rkcy.pb.Platform.HeaderAliasesEntry
	1, // 3: rkcy.pb.Platform.App.type:type_name -> rkcy.pb.Platform.App.Type
	7, // 4: rkcy.pb.Platform.App.topics:type_name -> rkcy.pb.Platform.App.Topics
	2, // 5: rkcy.pb.Platform.App.Topics.state:type_name -> rkcy.pb.Platform.App.Topics.State
	8, // 6: rkcy.pb.Platform.App.Topics.current:type_name -> rkcy.pb.Platform.App.Topic
	8, // 7: rkcy.pb.Platform.App.Topics.future:type_name -> rkcy.pb.Platform.App.Topic
	0, // 8: rkcy.pb.Platform.App.Topic.partition_strat:type_name -> rkcy.pb.Platform.PartitionStrategy
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_platform_proto_init() }
func file_platform_proto_init() {
	if File_platform_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_platform_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Platform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Platform_App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Platform_Cluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Platform_App_Topics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Platform_App_Topic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_platform_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_platform_proto_goTypes,
		DependencyIndexes: file_platform_proto_depIdxs,
		EnumInfos:         file_platform_proto_enumTypes,
		MessageInfos:      file_platform_proto_msgTypes,
	}.Build()
	File_platform_proto = out.File
	file_platform_proto_rawDesc = nil
	file_platform_proto_goTypes = nil
	file_platform_proto_depIdxs = nil
}
