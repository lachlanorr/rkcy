// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: apecs.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ApecsTxn_Dir int32

const (
	ApecsTxn_FORWARD ApecsTxn_Dir = 0
	ApecsTxn_REVERSE ApecsTxn_Dir = 1
)

// Enum value maps for ApecsTxn_Dir.
var (
	ApecsTxn_Dir_name = map[int32]string{
		0: "FORWARD",
		1: "REVERSE",
	}
	ApecsTxn_Dir_value = map[string]int32{
		"FORWARD": 0,
		"REVERSE": 1,
	}
)

func (x ApecsTxn_Dir) Enum() *ApecsTxn_Dir {
	p := new(ApecsTxn_Dir)
	*p = x
	return p
}

func (x ApecsTxn_Dir) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApecsTxn_Dir) Descriptor() protoreflect.EnumDescriptor {
	return file_apecs_proto_enumTypes[0].Descriptor()
}

func (ApecsTxn_Dir) Type() protoreflect.EnumType {
	return &file_apecs_proto_enumTypes[0]
}

func (x ApecsTxn_Dir) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApecsTxn_Dir.Descriptor instead.
func (ApecsTxn_Dir) EnumDescriptor() ([]byte, []int) {
	return file_apecs_proto_rawDescGZIP(), []int{0, 0}
}

type ApecsTxn_Step_Status int32

const (
	ApecsTxn_Step_PENDING  ApecsTxn_Step_Status = 0
	ApecsTxn_Step_COMPLETE ApecsTxn_Step_Status = 1
	ApecsTxn_Step_REVERTED ApecsTxn_Step_Status = 2
	ApecsTxn_Step_ERROR    ApecsTxn_Step_Status = 3
)

// Enum value maps for ApecsTxn_Step_Status.
var (
	ApecsTxn_Step_Status_name = map[int32]string{
		0: "PENDING",
		1: "COMPLETE",
		2: "REVERTED",
		3: "ERROR",
	}
	ApecsTxn_Step_Status_value = map[string]int32{
		"PENDING":  0,
		"COMPLETE": 1,
		"REVERTED": 2,
		"ERROR":    3,
	}
)

func (x ApecsTxn_Step_Status) Enum() *ApecsTxn_Step_Status {
	p := new(ApecsTxn_Step_Status)
	*p = x
	return p
}

func (x ApecsTxn_Step_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApecsTxn_Step_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_apecs_proto_enumTypes[1].Descriptor()
}

func (ApecsTxn_Step_Status) Type() protoreflect.EnumType {
	return &file_apecs_proto_enumTypes[1]
}

func (x ApecsTxn_Step_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApecsTxn_Step_Status.Descriptor instead.
func (ApecsTxn_Step_Status) EnumDescriptor() ([]byte, []int) {
	return file_apecs_proto_rawDescGZIP(), []int{0, 0, 0}
}

type ApecsTxn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                          // uuid of txn used for tracing and reporting
	Direction    ApecsTxn_Dir     `protobuf:"varint,2,opt,name=direction,proto3,enum=rkcy.pb.ApecsTxn_Dir" json:"direction,omitempty"` // starts in forward, can potentially go to reverse if the transaction is reversible
	CanRevert    bool             `protobuf:"varint,3,opt,name=can_revert,json=canRevert,proto3" json:"can_revert,omitempty"`          // whether or not this transaction can be rolled back.
	ForwardSteps []*ApecsTxn_Step `protobuf:"bytes,4,rep,name=forward_steps,json=forwardSteps,proto3" json:"forward_steps,omitempty"`  // filled upon creation with forward steps
	ReverseSteps []*ApecsTxn_Step `protobuf:"bytes,5,rep,name=reverse_steps,json=reverseSteps,proto3" json:"reverse_steps,omitempty"`  // upon an error in a "can_revert==true" transaction, this gets filled with the right rollback steps. Separatiing reverse from forward steps preserves the history for review of the nature of the failure.
}

func (x *ApecsTxn) Reset() {
	*x = ApecsTxn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apecs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApecsTxn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApecsTxn) ProtoMessage() {}

func (x *ApecsTxn) ProtoReflect() protoreflect.Message {
	mi := &file_apecs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApecsTxn.ProtoReflect.Descriptor instead.
func (*ApecsTxn) Descriptor() ([]byte, []int) {
	return file_apecs_proto_rawDescGZIP(), []int{0}
}

func (x *ApecsTxn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApecsTxn) GetDirection() ApecsTxn_Dir {
	if x != nil {
		return x.Direction
	}
	return ApecsTxn_FORWARD
}

func (x *ApecsTxn) GetCanRevert() bool {
	if x != nil {
		return x.CanRevert
	}
	return false
}

func (x *ApecsTxn) GetForwardSteps() []*ApecsTxn_Step {
	if x != nil {
		return x.ForwardSteps
	}
	return nil
}

func (x *ApecsTxn) GetReverseSteps() []*ApecsTxn_Step {
	if x != nil {
		return x.ReverseSteps
	}
	return nil
}

type MostRecentOffsets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation int32 `protobuf:"varint,1,opt,name=generation,proto3" json:"generation,omitempty"`
	Offset     int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *MostRecentOffsets) Reset() {
	*x = MostRecentOffsets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apecs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MostRecentOffsets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MostRecentOffsets) ProtoMessage() {}

func (x *MostRecentOffsets) ProtoReflect() protoreflect.Message {
	mi := &file_apecs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MostRecentOffsets.ProtoReflect.Descriptor instead.
func (*MostRecentOffsets) Descriptor() ([]byte, []int) {
	return file_apecs_proto_rawDescGZIP(), []int{1}
}

func (x *MostRecentOffsets) GetGeneration() int32 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *MostRecentOffsets) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ApecsTxn_Step struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName       string                 `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`                   // logical persistence model that's used to partition messages
	Command       int32                  `protobuf:"varint,2,opt,name=command,proto3" json:"command,omitempty"`                                 // command name, this will map to a piece of code (e.g. function)
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`                                          // partition key
	Payload       []byte                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`                                  // opaque payload for command
	Status        ApecsTxn_Step_Status   `protobuf:"varint,5,opt,name=status,proto3,enum=rkcy.pb.ApecsTxn_Step_Status" json:"status,omitempty"` // status of this step, all start at pending, and can transition to complete, error, and rolled back
	ProcessedTime *timestamp.Timestamp   `protobuf:"bytes,6,opt,name=processed_time,json=processedTime,proto3" json:"processed_time,omitempty"` // actual time this command result was recorded
	EffectiveTime *timestamp.Timestamp   `protobuf:"bytes,7,opt,name=effective_time,json=effectiveTime,proto3" json:"effective_time,omitempty"` // effective time, useful in some applications as it may make sense to deviate from processed_time for reporting purposes
	Errors        []*ApecsTxn_Step_Error `protobuf:"bytes,8,rep,name=errors,proto3" json:"errors,omitempty"`                                    // general bucket for error messages that will effectively be the logged errors of this step
}

func (x *ApecsTxn_Step) Reset() {
	*x = ApecsTxn_Step{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apecs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApecsTxn_Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApecsTxn_Step) ProtoMessage() {}

func (x *ApecsTxn_Step) ProtoReflect() protoreflect.Message {
	mi := &file_apecs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApecsTxn_Step.ProtoReflect.Descriptor instead.
func (*ApecsTxn_Step) Descriptor() ([]byte, []int) {
	return file_apecs_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ApecsTxn_Step) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ApecsTxn_Step) GetCommand() int32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *ApecsTxn_Step) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ApecsTxn_Step) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ApecsTxn_Step) GetStatus() ApecsTxn_Step_Status {
	if x != nil {
		return x.Status
	}
	return ApecsTxn_Step_PENDING
}

func (x *ApecsTxn_Step) GetProcessedTime() *timestamp.Timestamp {
	if x != nil {
		return x.ProcessedTime
	}
	return nil
}

func (x *ApecsTxn_Step) GetEffectiveTime() *timestamp.Timestamp {
	if x != nil {
		return x.EffectiveTime
	}
	return nil
}

func (x *ApecsTxn_Step) GetErrors() []*ApecsTxn_Step_Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type ApecsTxn_Step_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ApecsTxn_Step_Error) Reset() {
	*x = ApecsTxn_Step_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apecs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApecsTxn_Step_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApecsTxn_Step_Error) ProtoMessage() {}

func (x *ApecsTxn_Step_Error) ProtoReflect() protoreflect.Message {
	mi := &file_apecs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApecsTxn_Step_Error.ProtoReflect.Descriptor instead.
func (*ApecsTxn_Step_Error) Descriptor() ([]byte, []int) {
	return file_apecs_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *ApecsTxn_Step_Error) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ApecsTxn_Step_Error) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_apecs_proto protoreflect.FileDescriptor

var file_apecs_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72,
	0x6b, 0x63, 0x79, 0x2e, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x05, 0x0a, 0x08, 0x41, 0x70, 0x65, 0x63,
	0x73, 0x54, 0x78, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x70, 0x65, 0x63, 0x73, 0x54, 0x78, 0x6e, 0x2e, 0x44, 0x69, 0x72, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6e,
	0x5f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63,
	0x61, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x65, 0x63, 0x73, 0x54,
	0x78, 0x6e, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x53, 0x74, 0x65, 0x70, 0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x5f, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72,
	0x6b, 0x63, 0x79, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x65, 0x63, 0x73, 0x54, 0x78, 0x6e, 0x2e,
	0x53, 0x74, 0x65, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x74, 0x65,
	0x70, 0x73, 0x1a, 0xc7, 0x03, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x35, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x72,
	0x6b, 0x63, 0x79, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x65, 0x63, 0x73, 0x54, 0x78, 0x6e, 0x2e,
	0x53, 0x74, 0x65, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x6b, 0x63, 0x79,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x65, 0x63, 0x73, 0x54, 0x78, 0x6e, 0x2e, 0x53, 0x74, 0x65,
	0x70, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a,
	0x2d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x3c,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54,
	0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x56, 0x45, 0x52, 0x54, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x22, 0x1f, 0x0a, 0x03,
	0x44, 0x69, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x45, 0x10, 0x01, 0x22, 0x4b, 0x0a,
	0x11, 0x4d, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x61, 0x63, 0x68, 0x6c, 0x61, 0x6e,
	0x6f, 0x72, 0x72, 0x2f, 0x72, 0x6b, 0x63, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x6b, 0x63,
	0x79, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apecs_proto_rawDescOnce sync.Once
	file_apecs_proto_rawDescData = file_apecs_proto_rawDesc
)

func file_apecs_proto_rawDescGZIP() []byte {
	file_apecs_proto_rawDescOnce.Do(func() {
		file_apecs_proto_rawDescData = protoimpl.X.CompressGZIP(file_apecs_proto_rawDescData)
	})
	return file_apecs_proto_rawDescData
}

var file_apecs_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_apecs_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_apecs_proto_goTypes = []interface{}{
	(ApecsTxn_Dir)(0),           // 0: rkcy.pb.ApecsTxn.Dir
	(ApecsTxn_Step_Status)(0),   // 1: rkcy.pb.ApecsTxn.Step.Status
	(*ApecsTxn)(nil),            // 2: rkcy.pb.ApecsTxn
	(*MostRecentOffsets)(nil),   // 3: rkcy.pb.MostRecentOffsets
	(*ApecsTxn_Step)(nil),       // 4: rkcy.pb.ApecsTxn.Step
	(*ApecsTxn_Step_Error)(nil), // 5: rkcy.pb.ApecsTxn.Step.Error
	(*timestamp.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_apecs_proto_depIdxs = []int32{
	0, // 0: rkcy.pb.ApecsTxn.direction:type_name -> rkcy.pb.ApecsTxn.Dir
	4, // 1: rkcy.pb.ApecsTxn.forward_steps:type_name -> rkcy.pb.ApecsTxn.Step
	4, // 2: rkcy.pb.ApecsTxn.reverse_steps:type_name -> rkcy.pb.ApecsTxn.Step
	1, // 3: rkcy.pb.ApecsTxn.Step.status:type_name -> rkcy.pb.ApecsTxn.Step.Status
	6, // 4: rkcy.pb.ApecsTxn.Step.processed_time:type_name -> google.protobuf.Timestamp
	6, // 5: rkcy.pb.ApecsTxn.Step.effective_time:type_name -> google.protobuf.Timestamp
	5, // 6: rkcy.pb.ApecsTxn.Step.errors:type_name -> rkcy.pb.ApecsTxn.Step.Error
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_apecs_proto_init() }
func file_apecs_proto_init() {
	if File_apecs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apecs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApecsTxn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apecs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MostRecentOffsets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apecs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApecsTxn_Step); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apecs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApecsTxn_Step_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apecs_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_apecs_proto_goTypes,
		DependencyIndexes: file_apecs_proto_depIdxs,
		EnumInfos:         file_apecs_proto_enumTypes,
		MessageInfos:      file_apecs_proto_msgTypes,
	}.Build()
	File_apecs_proto = out.File
	file_apecs_proto_rawDesc = nil
	file_apecs_proto_goTypes = nil
	file_apecs_proto_depIdxs = nil
}
