{
  "swagger": "2.0",
  "info": {
    "title": "rkcy/portal.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/config/read": {
      "get": {
        "operationId": "PortalService_ConfigRead",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rkcy.ConfigReadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "PortalService"
        ]
      }
    },
    "/v1/config/update": {
      "post": {
        "operationId": "PortalService_ConfigUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rkcy.Void"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "PortalService"
        ]
      }
    },
    "/v1/config/update/complex": {
      "post": {
        "operationId": "PortalService_ConfigUpdateComplex",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rkcy.Void"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "PortalService"
        ]
      }
    },
    "/v1/decode/arg": {
      "post": {
        "operationId": "PortalService_DecodeArgPayload",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rkcy.DecodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rkcy.DecodePayloadArgs"
            }
          }
        ],
        "tags": [
          "PortalService"
        ]
      }
    },
    "/v1/decode/instance": {
      "post": {
        "operationId": "PortalService_DecodeInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rkcy.DecodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rkcy.DecodeInstanceArgs"
            }
          }
        ],
        "tags": [
          "PortalService"
        ]
      }
    },
    "/v1/decode/result": {
      "post": {
        "operationId": "PortalService_DecodeResultPayload",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rkcy.DecodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rkcy.DecodePayloadArgs"
            }
          }
        ],
        "tags": [
          "PortalService"
        ]
      }
    },
    "/v1/platform/read": {
      "get": {
        "operationId": "PortalService_Platform",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rkcy.Platform"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "PortalService"
        ]
      }
    },
    "/v1/producers/read": {
      "get": {
        "operationId": "PortalService_Producers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rkcy.TrackedProducers"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "PortalService"
        ]
      }
    }
  },
  "definitions": {
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "rkcy.Config": {
      "type": "object",
      "properties": {
        "stringVals": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "boolVals": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "float64Vals": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "complexVals": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/rkcy.Config.Complex"
          },
          "title": "key is protobuf message type"
        }
      }
    },
    "rkcy.Config.Complex": {
      "type": "object",
      "properties": {
        "messageVals": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          },
          "title": "key is id of message\nval is serialized protobuf"
        }
      }
    },
    "rkcy.ConfigReadResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/rkcy.Config"
        },
        "configJson": {
          "type": "string"
        },
        "lastChanged": {
          "type": "string",
          "format": "date-time"
        },
        "lastChangedOffset": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "rkcy.DecodeInstanceArgs": {
      "type": "object",
      "properties": {
        "concern": {
          "type": "string"
        },
        "payload64": {
          "type": "string"
        }
      }
    },
    "rkcy.DecodePayloadArgs": {
      "type": "object",
      "properties": {
        "concern": {
          "type": "string"
        },
        "system": {
          "$ref": "#/definitions/rkcy.System"
        },
        "command": {
          "type": "string"
        },
        "payload64": {
          "type": "string"
        }
      }
    },
    "rkcy.DecodeResponse": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "related": {
          "type": "string"
        }
      }
    },
    "rkcy.Platform": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "concerns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rkcy.Platform.Concern"
          }
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rkcy.Platform.Cluster"
          }
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "rkcy.Platform.Cluster": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "unique name of cluster"
        },
        "brokers": {
          "type": "string",
          "title": "kafka brokers for the cluster"
        }
      }
    },
    "rkcy.Platform.Concern": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/rkcy.Platform.Concern.Type"
        },
        "name": {
          "type": "string"
        },
        "logLevel": {
          "$ref": "#/definitions/rkcy.Severity"
        },
        "topics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rkcy.Platform.Concern.Topics"
          }
        }
      }
    },
    "rkcy.Platform.Concern.Topic": {
      "type": "object",
      "properties": {
        "generation": {
          "type": "integer",
          "format": "int32",
          "title": "incrementing generation id, +1 every time we migrate a logical topic"
        },
        "cluster": {
          "type": "string",
          "title": "kafka cluster topic exists within"
        },
        "partitionCount": {
          "type": "integer",
          "format": "int32"
        },
        "partitionStrat": {
          "$ref": "#/definitions/rkcy.Platform.PartitionStrategy",
          "title": "How to determine which partiton messages are produced to"
        }
      }
    },
    "rkcy.Platform.Concern.Topics": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "base name, it will get decorated with additional dot notated pieces"
        },
        "state": {
          "$ref": "#/definitions/rkcy.Platform.Concern.Topics.State",
          "title": "current vs future transition state"
        },
        "current": {
          "$ref": "#/definitions/rkcy.Platform.Concern.Topic",
          "title": "current physical topic"
        },
        "future": {
          "$ref": "#/definitions/rkcy.Platform.Concern.Topic",
          "title": "topic we're in the process of migrating to, will be\nnull unless an active migration is taking place"
        },
        "consumerProgram": {
          "$ref": "#/definitions/rkcy.Program"
        }
      }
    },
    "rkcy.Platform.Concern.Topics.State": {
      "type": "string",
      "enum": [
        "CURRENT",
        "FUTURE_INIT",
        "PRODUCER_PAUSE",
        "CONSUMER_SHUTDOWN",
        "CONSUMER_FUTURE_START",
        "PRODUCER_FUTURE_START",
        "FUTURE_TO_CURRENT"
      ],
      "default": "CURRENT",
      "description": "- CURRENT: no future topic exists, everyting using current\n - FUTURE_INIT: future topic added to concern and gets created\n - PRODUCER_PAUSE: producers all pause\n - CONSUMER_SHUTDOWN: consumers read until end and shutdown\n - CONSUMER_FUTURE_START: new consumers start on future, advanced passed newest\n - PRODUCER_FUTURE_START: producers unpause and produce to future\n - FUTURE_TO_CURRENT: future becomes current, future is nulled, state set to CURRENT",
      "title": "States surrounding current vs future topics and current to future transition"
    },
    "rkcy.Platform.Concern.Type": {
      "type": "string",
      "enum": [
        "GENERAL",
        "BATCH",
        "APECS"
      ],
      "default": "GENERAL",
      "description": "- GENERAL: Required topics:\n    * admin - handles control messages to coordinate distributed tasks\n    * error - errors encountered during processing written here\n    * ... - additional concern specific topics\n - BATCH: Required topics:\n    * admin - handles control messages to coordinate distributed tasks\n    * error - errors encountered during processing written here\n    * ... - additional concern specific topics for stages of batch processing\nFor telemetry purposes, stage topics are assumed to be in alphabetical order.\nBatch jobs topics aren't created by default, but on demand with the timestamp\nincluded in the names.\n - APECS: Required topics:\n    * admin - handles control messages to coordinate distributed tasks\n    * process - handles messages that affect internal state of models\n    * error - errors encountered during processing written here\n    * complete - completed transactions written here for post processing\n    * storage - handles messages sent to the persistence layer",
      "title": "Type implies what topics will be present"
    },
    "rkcy.Platform.PartitionStrategy": {
      "type": "string",
      "enum": [
        "FNV64_MOD"
      ],
      "default": "FNV64_MOD",
      "description": "- FNV64_MOD: FNV-1 64 bit has followed by modulus of partition count",
      "title": "Different types of partitioning mechanisms"
    },
    "rkcy.Program": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "abbrev": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "rkcy.Severity": {
      "type": "string",
      "enum": [
        "DBG",
        "INF",
        "WRN",
        "ERR"
      ],
      "default": "DBG"
    },
    "rkcy.System": {
      "type": "string",
      "enum": [
        "NO_SYSTEM",
        "PROCESS",
        "STORAGE"
      ],
      "default": "NO_SYSTEM"
    },
    "rkcy.TrackedProducers": {
      "type": "object",
      "properties": {
        "topicProducers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rkcy.TrackedProducers.ProducerInfo"
          }
        }
      }
    },
    "rkcy.TrackedProducers.ProducerInfo": {
      "type": "object",
      "properties": {
        "topic": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "timeSinceUpdate": {
          "type": "string"
        }
      }
    },
    "rkcy.Void": {
      "type": "object",
      "title": "Convenience empty message for services that return or accept no data"
    }
  }
}
