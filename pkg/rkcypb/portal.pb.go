// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: portal.proto

package rkcypb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DecodeInstanceArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Concern   string `protobuf:"bytes,1,opt,name=concern,proto3" json:"concern,omitempty"`
	Payload64 string `protobuf:"bytes,2,opt,name=payload64,proto3" json:"payload64,omitempty"`
}

func (x *DecodeInstanceArgs) Reset() {
	*x = DecodeInstanceArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeInstanceArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeInstanceArgs) ProtoMessage() {}

func (x *DecodeInstanceArgs) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeInstanceArgs.ProtoReflect.Descriptor instead.
func (*DecodeInstanceArgs) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{0}
}

func (x *DecodeInstanceArgs) GetConcern() string {
	if x != nil {
		return x.Concern
	}
	return ""
}

func (x *DecodeInstanceArgs) GetPayload64() string {
	if x != nil {
		return x.Payload64
	}
	return ""
}

type DecodePayloadArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Concern   string `protobuf:"bytes,1,opt,name=concern,proto3" json:"concern,omitempty"`
	System    System `protobuf:"varint,2,opt,name=system,proto3,enum=rkcy.System" json:"system,omitempty"`
	Command   string `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	Payload64 string `protobuf:"bytes,4,opt,name=payload64,proto3" json:"payload64,omitempty"`
}

func (x *DecodePayloadArgs) Reset() {
	*x = DecodePayloadArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodePayloadArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodePayloadArgs) ProtoMessage() {}

func (x *DecodePayloadArgs) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodePayloadArgs.ProtoReflect.Descriptor instead.
func (*DecodePayloadArgs) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{1}
}

func (x *DecodePayloadArgs) GetConcern() string {
	if x != nil {
		return x.Concern
	}
	return ""
}

func (x *DecodePayloadArgs) GetSystem() System {
	if x != nil {
		return x.System
	}
	return System_NO_SYSTEM
}

func (x *DecodePayloadArgs) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *DecodePayloadArgs) GetPayload64() string {
	if x != nil {
		return x.Payload64
	}
	return ""
}

type DecodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Instance string `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	Related  string `protobuf:"bytes,3,opt,name=related,proto3" json:"related,omitempty"`
}

func (x *DecodeResponse) Reset() {
	*x = DecodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeResponse) ProtoMessage() {}

func (x *DecodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeResponse.ProtoReflect.Descriptor instead.
func (*DecodeResponse) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{2}
}

func (x *DecodeResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DecodeResponse) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *DecodeResponse) GetRelated() string {
	if x != nil {
		return x.Related
	}
	return ""
}

type TrackedProducers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicProducers []*TrackedProducers_ProducerInfo `protobuf:"bytes,1,rep,name=topic_producers,json=topicProducers,proto3" json:"topic_producers,omitempty"`
}

func (x *TrackedProducers) Reset() {
	*x = TrackedProducers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackedProducers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackedProducers) ProtoMessage() {}

func (x *TrackedProducers) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackedProducers.ProtoReflect.Descriptor instead.
func (*TrackedProducers) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{3}
}

func (x *TrackedProducers) GetTopicProducers() []*TrackedProducers_ProducerInfo {
	if x != nil {
		return x.TopicProducers
	}
	return nil
}

type ConfigReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config            *Config                `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	ConfigJson        string                 `protobuf:"bytes,2,opt,name=config_json,json=configJson,proto3" json:"config_json,omitempty"`
	LastChanged       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_changed,json=lastChanged,proto3" json:"last_changed,omitempty"`
	LastChangedOffset int64                  `protobuf:"varint,4,opt,name=last_changed_offset,json=lastChangedOffset,proto3" json:"last_changed_offset,omitempty"`
}

func (x *ConfigReadResponse) Reset() {
	*x = ConfigReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigReadResponse) ProtoMessage() {}

func (x *ConfigReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigReadResponse.ProtoReflect.Descriptor instead.
func (*ConfigReadResponse) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigReadResponse) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConfigReadResponse) GetConfigJson() string {
	if x != nil {
		return x.ConfigJson
	}
	return ""
}

func (x *ConfigReadResponse) GetLastChanged() *timestamppb.Timestamp {
	if x != nil {
		return x.LastChanged
	}
	return nil
}

func (x *ConfigReadResponse) GetLastChangedOffset() int64 {
	if x != nil {
		return x.LastChangedOffset
	}
	return 0
}

type CancelTxnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnId string `protobuf:"bytes,1,opt,name=txn_id,json=txnId,proto3" json:"txn_id,omitempty"`
}

func (x *CancelTxnRequest) Reset() {
	*x = CancelTxnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelTxnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTxnRequest) ProtoMessage() {}

func (x *CancelTxnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTxnRequest.ProtoReflect.Descriptor instead.
func (*CancelTxnRequest) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{5}
}

func (x *CancelTxnRequest) GetTxnId() string {
	if x != nil {
		return x.TxnId
	}
	return ""
}

type TrackedProducers_ProducerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic           string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	TimeSinceUpdate string `protobuf:"bytes,3,opt,name=time_since_update,json=timeSinceUpdate,proto3" json:"time_since_update,omitempty"`
}

func (x *TrackedProducers_ProducerInfo) Reset() {
	*x = TrackedProducers_ProducerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackedProducers_ProducerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackedProducers_ProducerInfo) ProtoMessage() {}

func (x *TrackedProducers_ProducerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_portal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackedProducers_ProducerInfo.ProtoReflect.Descriptor instead.
func (*TrackedProducers_ProducerInfo) Descriptor() ([]byte, []int) {
	return file_portal_proto_rawDescGZIP(), []int{3, 0}
}

func (x *TrackedProducers_ProducerInfo) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *TrackedProducers_ProducerInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TrackedProducers_ProducerInfo) GetTimeSinceUpdate() string {
	if x != nil {
		return x.TimeSinceUpdate
	}
	return ""
}

var File_portal_proto protoreflect.FileDescriptor

var file_portal_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04,
	0x72, 0x6b, 0x63, 0x79, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x61, 0x70, 0x65, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x4c, 0x0a, 0x12, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x72,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x72, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x36, 0x34, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x36, 0x34, 0x22, 0x8b,
	0x01, 0x0a, 0x11, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x72, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x72, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x72, 0x6e, 0x12, 0x24,
	0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x36, 0x34, 0x22, 0x5a, 0x0a, 0x0e,
	0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x73, 0x12, 0x4c, 0x0a,
	0x0f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x73, 0x1a, 0x60, 0x0a, 0x0c, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xca, 0x01,
	0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0c, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x29, 0x0a, 0x10, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x74, 0x78, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x78, 0x6e, 0x49, 0x64, 0x32, 0x98, 0x04, 0x0a, 0x0d, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x44, 0x65, 0x66, 0x12, 0x0a, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x56, 0x6f,
	0x69, 0x64, 0x1a, 0x11, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x44, 0x65, 0x66, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x65, 0x66, 0x2f, 0x72,
	0x65, 0x61, 0x64, 0x12, 0x4b, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x61,
	0x64, 0x12, 0x0a, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x18, 0x2e,
	0x72, 0x6b, 0x63, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12,
	0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x72, 0x65, 0x61, 0x64,
	0x12, 0x60, 0x0a, 0x0e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x18, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x14, 0x2e, 0x72,
	0x6b, 0x63, 0x79, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0x5c, 0x0a, 0x10, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x41, 0x72, 0x67, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x17, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x44, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x72, 0x67, 0x73, 0x1a,
	0x14, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x72, 0x67, 0x2f, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x3a, 0x01, 0x2a,
	0x12, 0x62, 0x0a, 0x13, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x17, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x44,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x14, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2f, 0x64, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x3a, 0x01, 0x2a, 0x12, 0x4a, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x78,
	0x6e, 0x12, 0x16, 0x2e, 0x72, 0x6b, 0x63, 0x79, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54,
	0x78, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x72, 0x6b, 0x63, 0x79,
	0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x78, 0x6e, 0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x3a, 0x01, 0x2a,
	0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c,
	0x61, 0x63, 0x68, 0x6c, 0x61, 0x6e, 0x6f, 0x72, 0x72, 0x2f, 0x72, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x6b, 0x63, 0x79, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_portal_proto_rawDescOnce sync.Once
	file_portal_proto_rawDescData = file_portal_proto_rawDesc
)

func file_portal_proto_rawDescGZIP() []byte {
	file_portal_proto_rawDescOnce.Do(func() {
		file_portal_proto_rawDescData = protoimpl.X.CompressGZIP(file_portal_proto_rawDescData)
	})
	return file_portal_proto_rawDescData
}

var file_portal_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_portal_proto_goTypes = []interface{}{
	(*DecodeInstanceArgs)(nil),            // 0: rkcy.DecodeInstanceArgs
	(*DecodePayloadArgs)(nil),             // 1: rkcy.DecodePayloadArgs
	(*DecodeResponse)(nil),                // 2: rkcy.DecodeResponse
	(*TrackedProducers)(nil),              // 3: rkcy.TrackedProducers
	(*ConfigReadResponse)(nil),            // 4: rkcy.ConfigReadResponse
	(*CancelTxnRequest)(nil),              // 5: rkcy.CancelTxnRequest
	(*TrackedProducers_ProducerInfo)(nil), // 6: rkcy.TrackedProducers.ProducerInfo
	(System)(0),                           // 7: rkcy.System
	(*Config)(nil),                        // 8: rkcy.Config
	(*timestamppb.Timestamp)(nil),         // 9: google.protobuf.Timestamp
	(*Void)(nil),                          // 10: rkcy.Void
	(*PlatformDef)(nil),                   // 11: rkcy.PlatformDef
}
var file_portal_proto_depIdxs = []int32{
	7,  // 0: rkcy.DecodePayloadArgs.system:type_name -> rkcy.System
	6,  // 1: rkcy.TrackedProducers.topic_producers:type_name -> rkcy.TrackedProducers.ProducerInfo
	8,  // 2: rkcy.ConfigReadResponse.config:type_name -> rkcy.Config
	9,  // 3: rkcy.ConfigReadResponse.last_changed:type_name -> google.protobuf.Timestamp
	10, // 4: rkcy.PortalService.PlatformDef:input_type -> rkcy.Void
	10, // 5: rkcy.PortalService.ConfigRead:input_type -> rkcy.Void
	0,  // 6: rkcy.PortalService.DecodeInstance:input_type -> rkcy.DecodeInstanceArgs
	1,  // 7: rkcy.PortalService.DecodeArgPayload:input_type -> rkcy.DecodePayloadArgs
	1,  // 8: rkcy.PortalService.DecodeResultPayload:input_type -> rkcy.DecodePayloadArgs
	5,  // 9: rkcy.PortalService.CancelTxn:input_type -> rkcy.CancelTxnRequest
	11, // 10: rkcy.PortalService.PlatformDef:output_type -> rkcy.PlatformDef
	4,  // 11: rkcy.PortalService.ConfigRead:output_type -> rkcy.ConfigReadResponse
	2,  // 12: rkcy.PortalService.DecodeInstance:output_type -> rkcy.DecodeResponse
	2,  // 13: rkcy.PortalService.DecodeArgPayload:output_type -> rkcy.DecodeResponse
	2,  // 14: rkcy.PortalService.DecodeResultPayload:output_type -> rkcy.DecodeResponse
	10, // 15: rkcy.PortalService.CancelTxn:output_type -> rkcy.Void
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_portal_proto_init() }
func file_portal_proto_init() {
	if File_portal_proto != nil {
		return
	}
	file_apecs_proto_init()
	file_platform_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_portal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeInstanceArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodePayloadArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackedProducers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelTxnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portal_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackedProducers_ProducerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_portal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_portal_proto_goTypes,
		DependencyIndexes: file_portal_proto_depIdxs,
		MessageInfos:      file_portal_proto_msgTypes,
	}.Build()
	File_portal_proto = out.File
	file_portal_proto_rawDesc = nil
	file_portal_proto_goTypes = nil
	file_portal_proto_depIdxs = nil
}
